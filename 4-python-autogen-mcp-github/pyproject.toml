[project]
name = "mcp-testingt"
version = "0.0.1"
description = "A simple MCP server exposing a customizable prompt"
readme = "README.md"
requires-python = ">=3.10"
authors = [{ name = "New Relic" }]
maintainers = [
    { name = "Josh B.", email = "jbonczkowski@newrelic.com" },
]
keywords = ["mcp", "llm", "automation", "web", "fetch"]
license = { text = "unlisted" }
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
]
dependencies = [
    "anyio>=4.5",
    "autogen-agentchat>=0.5.7",
    "autogen-ext[mcp,openai]>=0.5.7",
    "click>=8.1.0",
    "dotenv>=0.9.9",
    "fastapi>=0.115.12",
    "fastmcp>=2.1.2",
    "httpx>=0.27",
    "mcp",
    "newrelic>=10.9.0",
    "openai>=1.74.0",
    "streamlit>=1.40.0",
    "requests>=2.32.0",
]

[project.scripts]
mcp-test-server = "server.main:main"
mcp-test-client = "client.client:main"
mcp-test-tools = "tools.main:main"
run-all = "run_all:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["server", "client"]

[tool.pyright]
include = ["server", "client"]
venvPath = "."
venv = ".venv"

[tool.ruff.lint]
select = ["E", "F", "I"]
ignore = []

[tool.ruff]
line-length = 88
target-version = "py310"

[tool.uv]
dev-dependencies = ["pyright>=1.1.378", "pytest>=8.3.3", "ruff>=0.6.9"]
